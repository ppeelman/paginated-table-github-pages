{"version":3,"sources":["components/ArtDetail/ArtDetail.module.css","../node_modules/@material-ui/core/esm/Button/Button.js","components/ArtDetail/ArtDetail.jsx","containers/ArtDetailContainer/ArtDetailContainer.jsx"],"names":["module","exports","Container","Line","Loading","PaintingContainer","PaintingImage","Metadata","Top","Bottom","Details","Description","GoBackButton","Button_Button","react_default","a","forwardRef","props","ref","children","classes","classNameProp","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","variant","other","objectWithoutProperties_default","contained","text","Object","clsx_m","root","textPrimary","textSecondary","containedPrimary","containedSecondary","outlined","outlinedPrimary","outlinedSecondary","concat","helpers","colorInherit","createElement","ButtonBase","extends_default","focusRipple","focusVisible","label","esm_Button_Button","withStyles","theme","lineHeight","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","primary","transition","transitions","create","duration","short","&:hover","textDecoration","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","width","display","alignItems","justifyContent","main","secondary","border","getContrastText","grey","boxShadow","shadows","&$focusVisible","&:active","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name","AdapterLink","React","react_router_dom","assign","innerRef","ArtDetail","_ref","artist","title","detail","description","image","styles","to","src","alt","ArtDetailContainer","_this","classCallCheck","this","pathNameList","possibleConstructorReturn","getPrototypeOf","call","history","location","pathname","split","objectNumber","length","_this2","LoadResources","loadFunction","getArtDetail","dataLocation","artDetail","render","dataList","components_ArtDetail_ArtDetail","error","loading","Component","connect","state","dispatch","actions"],"mappings":"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","file":"static/js/3.a5ec59b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ArtDetail_Container__39abP\",\"Line\":\"ArtDetail_Line__1RE_k\",\"Loading\":\"ArtDetail_Loading__Uio3Y\",\"PaintingContainer\":\"ArtDetail_PaintingContainer__19QLk\",\"PaintingImage\":\"ArtDetail_PaintingImage__1hI_y\",\"Metadata\":\"ArtDetail_Metadata__2Ff01\",\"Top\":\"ArtDetail_Top__2BiTn\",\"Bottom\":\"ArtDetail_Bottom__2hrdP\",\"Details\":\"ArtDetail_Details__1WXcA\",\"Description\":\"ArtDetail_Description__3UcLd\",\"GoBackButton\":\"ArtDetail_GoBackButton__F4nrd\"};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      lineHeight: 1.75\n    }, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      minWidth: 64,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var contained = variant === 'contained';\n  var text = variant === 'text';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, color === 'primary' && classes.textPrimary, color === 'secondary' && classes.textSecondary], contained && [classes.contained, color === 'primary' && classes.containedPrimary, color === 'secondary' && classes.containedSecondary], variant === 'outlined' && [classes.outlined, color === 'primary' && classes.outlinedPrimary, color === 'secondary' && classes.outlinedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, color === 'inherit' && classes.colorInherit);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","/* ===== *\\\r\n   React\r\n\\* ===== */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* ============ *\\\r\n   React-router\r\n\\* ============ */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* =========== *\\\r\n   Material-UI\r\n\\* =========== */\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// Internal imports\r\nimport styles from \"./ArtDetail.module.css\";\r\n\r\nconst AdapterLink = React.forwardRef((props, ref) => (\r\n  <Link innerRef={ref} {...props} />\r\n));\r\n\r\nconst ArtDetail = ({ artist, title, detail, description, image }) => {\r\n  return (\r\n    <div className={styles.Container}>\r\n      <div className={styles.Line} />\r\n\r\n      <div className={styles.Metadata}>\r\n        <div className={styles.Top}>\r\n          <div className={styles.GoBackButton}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={AdapterLink}\r\n              to=\"/\"\r\n            >\r\n              &lt;&nbsp;Back\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <h2>{artist}</h2>\r\n            <h1>{title}</h1>\r\n          </div>\r\n        </div>\r\n        <div className={styles.Bottom}>\r\n          {detail ? <p className={styles.Details}>{detail}</p> : null}\r\n          {description ? (\r\n            <p className={styles.Description}>{description}</p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className={styles.PaintingContainer}>\r\n        <img className={styles.PaintingImage} src={image} alt={\"Painting\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nArtDetail.propTypes = {\r\n  artist: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  detail: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string\r\n};\r\n\r\nexport default ArtDetail;\r\n","/* ===== *\\\r\n   React\r\n\\* ===== */\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* ============= *\\\r\n   Redux related\r\n\\* ============= */\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index.js\";\r\n\r\n// Internal imports\r\nimport LoadResources from \"../LoadResources/LoadResources\";\r\nimport ArtDetail from \"../../components/ArtDetail/ArtDetail\";\r\n\r\nclass ArtDetailContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Get objectnumber from URL\r\n    const pathNameList = this.props.history.location.pathname.split(\"/\");\r\n    this.objectNumber = pathNameList[pathNameList.length - 1];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoadResources\r\n        loadFunction={() => this.props.getArtDetail(this.objectNumber)}\r\n        dataLocation={this.props.artDetail[this.objectNumber]}\r\n        render={dataList => <ArtDetail {...dataList} />}\r\n        error={this.props.error}\r\n        loading={this.props.loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArtDetailContainer.propTypes = {\r\n  // Redux props\r\n  artDetail: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.object,\r\n  getArtDetail: PropTypes.func.isRequired,\r\n\r\n  // React-router props\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    artDetail: state.artDetail.artDetail,\r\n    loading: state.artDetail.loading,\r\n    error: state.artDetail.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getArtDetail: objectNumber => dispatch(actions.getArtDetail(objectNumber))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ArtDetailContainer);\r\n"],"sourceRoot":""}